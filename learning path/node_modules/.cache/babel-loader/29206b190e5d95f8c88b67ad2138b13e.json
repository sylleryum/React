{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React\\\\learning path\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  increment() {\n    // this.setState({\n    //     count: this.state.count + 1\n    // },  //call back function to be ran after state is updated\n    //     ()=>console.log(this.state.count)\n    // )\n    //setState is Async, therefore to run a function after updating state, needs to be on the above setState\n    //console.log(this.state.count);\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }));\n  }\n\n  incrementFive() {\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"count - \", this.state.count), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.incrementFive(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Increment\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["D:/React/React/learning path/src/components/Counter.js"],"names":["React","Component","Counter","constructor","props","state","count","increment","setState","prevState","incrementFive","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAKC,QAAL,CAAeC,SAAD,KAAc;AACxBH,MAAAA,KAAK,EAACG,SAAS,CAACH,KAAV,GAAkB;AADA,KAAd,CAAd;AAGH;;AAEDI,EAAAA,aAAa,GAAE;AACX,SAAKH,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc,KAAKN,KAAL,CAAWC,KAAzB,CADJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKI,aAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ;AAOH;;AAxC2B;;AA2ChC,eAAeR,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    increment(){\r\n        // this.setState({\r\n        //     count: this.state.count + 1\r\n        // },  //call back function to be ran after state is updated\r\n        //     ()=>console.log(this.state.count)\r\n        // )\r\n        //setState is Async, therefore to run a function after updating state, needs to be on the above setState\r\n        //console.log(this.state.count);\r\n        \r\n        this.setState((prevState)=>({\r\n            count:prevState.count + 1\r\n        }))\r\n    }\r\n\r\n    incrementFive(){\r\n        this.increment();\r\n        this.increment();\r\n        this.increment();\r\n        this.increment();\r\n        this.increment();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>count - {this.state.count}</div>\r\n                {/* <button onClick={()=>this.increment()}>Increment</button> */}\r\n                <button onClick={()=>this.incrementFive()}>Increment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}