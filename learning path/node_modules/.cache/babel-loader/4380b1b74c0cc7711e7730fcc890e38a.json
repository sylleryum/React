{"ast":null,"code":"var _jsxFileName = \"C:\\\\Eclipse\\\\React\\\\learning path\\\\src\\\\components\\\\Counter.js\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  increment() {\n    // this.setState({\n    //     count: this.state.count + 1\n    // },  //call back function to be ran after state is updated\n    //     ()=>console.log(this.state.count)\n    // )\n    //setState is Async, therefore to run a function after updating state, needs to be on the above setState\n    //console.log(this.state.count);\n    //use like this if previous state will be updated, second parameter (after prevState<)\n    this.setState((prevState, props) => ({\n      count: prevState.count = props.increment\n    }), //callback\n    () => console.log(\"success? \" + this.props.theProps));\n  }\n\n  incrementFive() {\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"count - \", this.state.count), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.increment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Increment\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Eclipse/React/learning path/src/components/Counter.js"],"names":["React","Component","Counter","constructor","props","state","count","increment","setState","prevState","console","log","theProps","incrementFive","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,SAAKC,QAAL,CAAc,CAACC,SAAD,EAAYL,KAAZ,MAAqB;AAC/BE,MAAAA,KAAK,EAACG,SAAS,CAACH,KAAV,GAAkBF,KAAK,CAACG;AADC,KAArB,CAAd,EAGA;AACA,UAAIG,OAAO,CAACC,GAAR,CAAY,cAAY,KAAKP,KAAL,CAAWQ,QAAnC,CAJJ;AAKH;;AAEDC,EAAAA,aAAa,GAAE;AACX,SAAKN,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc,KAAKT,KAAL,CAAWC,KAAzB,CADJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKC,SAAL,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ;AAOH;;AA5C2B;;AA+ChC,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    increment(){\r\n        // this.setState({\r\n        //     count: this.state.count + 1\r\n        // },  //call back function to be ran after state is updated\r\n        //     ()=>console.log(this.state.count)\r\n        // )\r\n        //setState is Async, therefore to run a function after updating state, needs to be on the above setState\r\n        //console.log(this.state.count);\r\n        \r\n\r\n        //use like this if previous state will be updated, second parameter (after prevState<)\r\n        this.setState((prevState, props)=>({\r\n            count:prevState.count = props.increment\r\n        }),\r\n        //callback\r\n        ()=>console.log(\"success? \"+this.props.theProps))\r\n    }\r\n\r\n    incrementFive(){\r\n        this.increment();\r\n        this.increment();\r\n        this.increment();\r\n        this.increment();\r\n        this.increment();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>count - {this.state.count}</div>\r\n                {/* <button onClick={()=>this.increment()}>Increment</button> */}\r\n                <button onClick={()=>this.increment()}>Increment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}