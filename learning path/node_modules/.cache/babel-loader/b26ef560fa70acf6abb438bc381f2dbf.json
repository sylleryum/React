{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React\\\\learning path\\\\src\\\\components\\\\events\\\\Update\\\\EvenNumber.js\";\nimport React, { Component } from 'react';\n\nclass EvenNumber extends Component {\n  constructor(props) {\n    super(props);\n    console.log('1st - constructor');\n  } //idea is to decide if we want the new passed props/state (nextProps, nextState), if returns true\n  //this props/state isn't added\n\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('2nd - shouldComponentUpdate', nextProps, nextState);\n\n    if (nextProps.number % 2 === 0) {\n      console.log('shouldComponentUpdate returns true');\n      return true;\n    } //by default always returns true\n\n\n    console.log('shouldComponentUpdate returns false');\n    return false;\n  }\n\n  render() {\n    console.log('3rd - render');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, this.props.number);\n  } //if shouldComponentUpdate returns true (will be updated) this method can be invoked to \n  //capture the previous state before it is updated, if this is used, componentDidUpdate NEEDS\n  //to be implemented\n\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('4th getSnapshotBeforeUpdate ', prevProps);\n    return prevProps.number;\n  } //snapshot from getSnapshotBeforeUpdate\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('5h - componentDidUpdate');\n    console.log('the previous number was: ' + snapshot);\n  }\n\n}\n\nexport default EvenNumber;","map":{"version":3,"sources":["D:/React/React/learning path/src/components/events/Update/EvenNumber.js"],"names":["React","Component","EvenNumber","constructor","props","console","log","shouldComponentUpdate","nextProps","nextState","number","render","getSnapshotBeforeUpdate","prevProps","prevState","componentDidUpdate","snapshot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAE/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEH,GAN8B,CAQ/B;AACA;;;AACAC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CE,SAA3C,EAAsDC,SAAtD;;AACA,QAAID,SAAS,CAACE,MAAV,GAAmB,CAAnB,KAAuB,CAA3B,EAA6B;AACzBL,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,aAAO,IAAP;AACH,KALsC,CAMvC;;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,WAAO,KAAP;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACLN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWM,MADhB,CADJ;AAKH,GA7B8B,CA+B/B;AACA;AACA;;;AACAE,EAAAA,uBAAuB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACzCT,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CO,SAA3C;AACA,WAAOA,SAAS,CAACH,MAAjB;AACH,GArC8B,CAuCS;;;AACxCK,EAAAA,kBAAkB,CAACF,SAAD,EAAYC,SAAZ,EAAuBE,QAAvB,EAAgC;AAC9CX,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEAD,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4BU,QAAxC;AAEH;;AA7C8B;;AAgDnC,eAAed,UAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass EvenNumber extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log('1st - constructor');\r\n        \r\n    }\r\n\r\n    //idea is to decide if we want the new passed props/state (nextProps, nextState), if returns true\r\n    //this props/state isn't added\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        console.log('2nd - shouldComponentUpdate', nextProps, nextState);\r\n        if (nextProps.number % 2===0){\r\n            console.log('shouldComponentUpdate returns true');\r\n            return true;            \r\n        }\r\n        //by default always returns true\r\n        console.log('shouldComponentUpdate returns false');\r\n        return false;        \r\n    }\r\n\r\n    render() {\r\n        console.log('3rd - render');\r\n        \r\n        return (\r\n            <div>\r\n                {this.props.number}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //if shouldComponentUpdate returns true (will be updated) this method can be invoked to \r\n    //capture the previous state before it is updated, if this is used, componentDidUpdate NEEDS\r\n    //to be implemented\r\n    getSnapshotBeforeUpdate(prevProps, prevState){\r\n        console.log('4th getSnapshotBeforeUpdate ',prevProps);\r\n        return prevProps.number\r\n    }\r\n\r\n                                            //snapshot from getSnapshotBeforeUpdate\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        console.log('5h - componentDidUpdate');\r\n        \r\n        console.log('the previous number was: '+snapshot);\r\n        \r\n    }\r\n}\r\n\r\nexport default EvenNumber\r\n"]},"metadata":{},"sourceType":"module"}