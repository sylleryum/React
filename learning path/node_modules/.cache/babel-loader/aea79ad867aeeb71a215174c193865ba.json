{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React\\\\learning path\\\\src\\\\components\\\\hoc\\\\withCounter.js\";\nimport React, { Component } from 'react';\n\nconst UpdatedComponent = OriginalComponent => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(OriginalComponent, {\n        count: this.state.count,\n        incrementCount: this.incrementCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      });\n    }\n\n  }\n\n  return NewComponent;\n};\n\nexport default UpdatedComponent;","map":{"version":3,"sources":["D:/React/React/learning path/src/components/hoc/withCounter.js"],"names":["React","Component","UpdatedComponent","OriginalComponent","NewComponent","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,gBAAgB,GAAGC,iBAAiB,IAAG;AACzC,QAAMC,YAAN,SAA2BJ,KAAK,CAACC,SAAjC,CAA0C;AACtCI,IAAAA,WAAW,CAACC,KAAD,EAAO;AACd,YAAMA,KAAN;;AADc,WAOlBC,cAPkB,GAOD,MAAM;AACnB,aAAKC,QAAL,CAAcC,SAAS,IAAE;AACrB,iBAAO;AAACC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAgB;AAAxB,WAAP;AACH,SAFD;AAGH,OAXiB;;AAEd,WAAKC,KAAL,GAAa;AACTD,QAAAA,KAAK,EAAE;AADE,OAAb;AAGH;;AAODE,IAAAA,MAAM,GAAE;AACJ,0BACI,oBAAC,iBAAD;AACC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,KADnB;AAEC,QAAA,cAAc,EAAE,KAAKH,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;AApBqC;;AAuB1C,SAAOH,YAAP;AACH,CAzBD;;AA2BA,eAAeF,gBAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst UpdatedComponent = OriginalComponent =>{\r\n    class NewComponent extends React.Component{\r\n        constructor(props){\r\n            super(props)\r\n            this.state = {\r\n                count: 0\r\n            }\r\n        }\r\n\r\n        incrementCount = () => {\r\n            this.setState(prevState=>{\r\n                return {count: prevState.count+1}\r\n            })\r\n        }\r\n        render(){\r\n            return (\r\n                <OriginalComponent\r\n                 count={this.state.count}\r\n                 incrementCount={this.incrementCount}/>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n    return NewComponent\r\n}\r\n\r\nexport default UpdatedComponent"]},"metadata":{},"sourceType":"module"}